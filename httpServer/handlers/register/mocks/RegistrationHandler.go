// Code generated by mockery v2.49.1. DO NOT EDIT.

package mocks

import (
	login "url_shortener/httpServer/handlers/login"

	mock "github.com/stretchr/testify/mock"
)

// RegistrationHandler is an autogenerated mock type for the RegistrationHandler type
type RegistrationHandler struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: user
func (_m *RegistrationHandler) CreateUser(user login.User) error {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(login.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRegistrationHandler creates a new instance of RegistrationHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegistrationHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *RegistrationHandler {
	mock := &RegistrationHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
